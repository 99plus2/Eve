;;-----------------------------------------------
;; Chat app
;;-----------------------------------------------

;* evtzzz
;  | event eid interval label key

;* inpuzzz
;  | inputValue interval label data

* rootUi
  | currentValue value
  ["div" {"id" "zomg" "style" "border:1px solid #ccc;"}
    ["ul" {"id" "messages" "style" "height: 200px; overflow:auto; width:400px; background: white; padding:15px; "}]
    ["input" {"type" "text"
              "placeholder" "Send a message"
              "value" value
              "keyDown" "newMessage"
              "input" "messageChanged"
              "style" "width:400px; padding:3px 5px; background:#fff; border:none; border-top:1px solid #ccc; "}]]

* messageUi
  | inboundMessages user message id
  ["li" {"parent" "messages" "id" id "ix" id}
    ["span" {"style" "color: #999"} user ": "]
    message]

* sentMessages
  | event interval label="newMessage"
  | keyboard interval keyCode=13
  | client client
  > inputValue label="messageChanged" | message = maxBy(intersectsFilter(@inputValue.data, @inputValue.interval, @interval), intervalStart(intersectsFilter(@inputValue.interval, @inputValue.interval, @interval)), "")
  ? @message != ""
  user = @client.substring(0,6)

;* outboundMessages
;  | sentMessages id message user

* inboundMessages
   ~ id message user

;* remoteSubsTemp
;  | client client:me
;  stack = "editor|Chat"
;  server = "server"
;  inbound = "inboundMessages"
;  outbound = "outboundMessages"
;  asCells = false

;* remote|subscription
;  | remoteSubsTemp server:remote inbound:view inbound:alias asCells me:recipient

;* remote|subscription
;  | remoteSubsTemp stack:remote outbound:view inbound:alias asCells server:recipient

* currentValue
  > keyboard keyCode=13 | submitInterval = maxBy(@keyboard.interval, intervalStart(@keyboard.interval), interval(-1, -1))
  > event label="messageChanged" | interval = maxBy(@event.interval, @event.eid, interval(-1, -1))
  > inputValue label="messageChanged" | lastValue = intersectsFilter(@inputValue.data, @inputValue.interval, @interval)[0] || ""
  ;| inputValue label="messageChanged" interval data:lastValue
  value = intervalStart(@submitInterval) > intervalStart(@interval) ? "" : @lastValue
